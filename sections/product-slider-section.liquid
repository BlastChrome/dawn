{{ 'slick-theme.css' | asset_url | stylesheet_tag }}
{{ 'slick.css' | asset_url | stylesheet_tag }}
<script src="{{ 'productCard.js' | asset_url }}" defer></script>

{%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {% if section.settings.view_all %}
    .view-all-wrapper{
      margin-top: 40px;
      width: 100%;
      display: flex;
      justify-content: center;
    }
  {% endif %}

  {% if section.settings.grid_layout != blank  %}
    {% assign grid_columns = section.settings.columns_desktop %}
    .section-{{ section.id }} .product-slider--grid{
      display: grid;
      gap: 30px;
      padding: 0 15px;
      grid-template-columns: repeat({{ grid_columns }}, 1fr);
    }
  {% endif %}
{%- endstyle -%}

<section class="product-slider-section section-{{ section.id }} section-{{ section.id }}-padding" id="{{section.id}}">
  <div class="container">
    <div class="row">
      <div class="col-12">
        {% assign collection_one = collections[section.settings.product_collection_one] %}
        {% assign collection_two = collections[section.settings.product_collection_two] %}
        <div class="product-tabs">
          {% if section.settings.product_collection_one %}
            <a
              href="#"
              id="product-tab-1"
              class="product-tabs__title {% if section.settings.active_tab ==  'product-tab-1' %} product-tabs__title--active{% endif %}"
            >
              {{ collection_one.title }}
            </a>
          {% endif %}
          {% if section.settings.product_collection_two %}
            <div class="product-tabs__separator product-tabs__separator--vertical"></div>
            <a
              href="#"
              id="product-tab-2"
              class="product-tabs__title{% if section.settings.active_tab ==  'product-tab-2'%} product-tabs__title--active {% endif %}"
            >
              {{ collection_two.title }}
            </a>
          {% endif %}
        </div>
        <div class="product-tabs__separator product-tabs__separator--horizontal"></div>
      </div>
    </div>
  </div>
  <div class="{% if section.settings.full_width %} container-full {% else %} container {% endif %}">
    <div class="row">
      <div class="col-12">
        <div class="product-slider-wrapper">
          {% if section.settings.grid_layout == false %}
            <div class="product-slider__controller">
              <button
                class="product-slider__controller-button product-slider__controller-button--prev"
                data-slick="prev"
              >
                {{ 'product-slider-section-prev.svg' | inline_asset_content }}
              </button>
              <button
                class="product-slider__controller-button product-slider__controller-button--next"
                data-slick="next"
              >
                {{ 'product-slider-section-next.svg' | inline_asset_content }}
              </button>
            </div>
          {% endif %}
          <div
            class="product-slider {% if section.settings.grid_layout %} product-slider--grid {% else %} product-slider--init {% endif %}"
            {% unless section.settings.grid_layout %}
              data-slick="slider"
            {% endunless %}
          >
            {% if section.settings.product_collection_one and section.settings.active_tab == 'product-tab-1' %}
              {% assign collection = collections[section.settings.product_collection_one] %}
            {% elsif section.settings.product_collection_two and section.settings.active_tab == 'product-tab-2' %}
              {% assign collection = collections[section.settings.product_collection_two] %}
            {% endif %}
            {% if collection %}
              {% for product in collection.products %}
                {% if section.settings.show_secondary_image == true %}
                  {% assign image_two = product.media[1] %}
                {% endif %}
                {%
                  render 'product-card',
                  product_form: product,
                  product_varient_id: product.variants.first.id,
                  product_card_image: product.featured_media | default: product.featured_image,
                  product_card_image_two: image_two,  asdasd
                  product_card_category: product.type,
                  product_card_title: product.title,
                  product_card_price: product.price,
                  product_card_url: product.url
                %}
              {% endfor %}
            {% endif %}
          </div>
        </div>
      </div>
    </div>
    {% if section.settings.view_all %}
      {% assign view_all_class = 'button--' | append: section.settings.view_all_style %}
      <div class="row">
        <div class="col-xs-12">
          <div class="view-all-wrapper">
            {% render 'button', button_text: 'View All', button_link: collection.url, button_class: view_all_class %}
          </div>
        </div>
      </div>
    {% endif %}
  </div>
</section>

<script>
  function initCollectionSlider(){
    $('.product-slider--init').slick({
      slidesToShow: {{ section.settings.columns_desktop}},
      slidesToScroll: {{ section.settings.columns_desktop}},
      autoplay: "{{ section.settings.autoplay}}"  ==  "yes" ? true : false,
      pauseOnHover: "{{ section.settings.pause_on_hover}}"  ==  "yes" ? true : false,
      speed: 300,
      {% if section.settings.autoplay == "yes" %}
        autoplaySpeed: {{section.settings.autoplay_speed}} * 1000,
      {% endif %}
      arrows: true,
      prevArrow: $('#{{ section.id }} [data-slick="prev"]'),
      nextArrow: $('#{{ section.id }} [data-slick="next"]'),
      responsive: [
        {
          breakpoint: 768,
          settings: {
            slidesToShow: 2,
            slidesToScroll: 2,
            arrows: false,
          },
        },
      ],
    });
  }


  function handleTabSwitching(){
        // Select all tabs within the product slider section
        const tabs = [...document.querySelectorAll('.section-{{ section.id }} .product-tabs__title')];

        // handle tab switching
        tabs.forEach((tab) => {
          tab.addEventListener('click', async (e) => {
            // Prevent the default link behavior
            e.preventDefault();
    
            // if the tab is already active, return
            if (e.target.classList.contains('product-tabs__title--active')) return;
    
            // Remove the active class from all tabs
            tabs.forEach((tab) => tab.classList.remove('product-tabs__title--active'));
    
            // Add the active class to the clicked tab
            e.target.classList.add('product-tabs__title--active');
    
            // Get the inner text of the clicked tab - this is the name of the collection
            const tabName = e.target.innerText;
    
            // Fetch the products for the clicked tab
            const res = await fetch(`/collections/${tabName.toLowerCase()}/products.json`);
            const collection = await res.json();
            const products = collection.products;
    
            // Destroy current slider
            $('.product-slider--init').slick('unslick');
    
            // Clear the product slider content
            $('.product-slider--init').empty();
    
            // Loop through the products and render them in the product slider
            products.forEach((product) => {
              // query the relevant product info
              const first_varient_id = product.variants[0].id;
              const first_varient_price = product.variants[0].price;
              const product_title = product.title;
              const product_featured_image = product.images[0].src;
              const product_category = product.product_type;

              // re-construct the product card html
              const productHTML = `
                  <product-card class="product-card" data-slick="slide">
                    <form action="/cart/add.js" method="post" class="product-card__form">
                      <!-- Hidden input for variant ID -->
                      <input type="hidden" name="id" value="${first_varient_id}">
    
                      <div class="product-card__actions">
                        <div class="product-card__actions--image">
                          <a href="#">
                            <img
                              src="${product_featured_image}"
                              alt="${product_title}"
                              width="748"
                              height="610"
                            >
                          </a>
                        </div>
                        <button type="submit" class="product-card__actions--cart">Add to Cart</button>
    
                        <div class="product-card__actions-group">
                          <button class="product-card__action product-card__action--favorite">
                           {{ 'product-card-favorite.svg' | inline_asset_content }}
                          </button>
                          <button class="product-card__action product-card__action--share">
                           {{ 'product-card-share.svg' | inline_asset_content }}
                          </button>
                          <button class="product-card__action product-card__action--zoom">
                           {{ 'product-card-zoom.svg' | inline_asset_content }}
                          </button>
                        </div>
                      </div>
    
                      <div class="product-card__details">
                        <h3 class="product-card__category">${product_category}</h3>
                        <h2 class="product-card__title">${product_title}</h2>
                        <p class="product-card__price">$${first_varient_price}</p>
                      </div>
                    </form>
                  </product-card>
              `;
              $('.product-slider--init').append(productHTML);
            });
            
            {% if section.settings.view_all %}
              const viewAllBtn = document.querySelector('.section-{{ section.id }} .view-all-wrapper a'); 
              viewAllBtn.src = 'test';
              console.log(viewAllBtn.href);
            {% endif%} 
    
            // re-initialize the slider
            initCollectionSlider();
          });
        });
  }

  // re-initialize the slider in the editor
  document.addEventListener('shopify:section:load', function () {
    initCollectionSlider()
  });

  // initial setup for the section
  document.addEventListener('DOMContentLoaded', function () {
    initCollectionSlider();
    handleTabSwitching()
  });
</script>

{% schema %}
{
  "name": "Collection Slider Section",
  "settings": [
    {
      "type": "header",
      "content": "Section Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 40
    },
    {
      "type": "header",
      "content": "Tab Settings"
    },
    {
      "type": "radio",
      "id": "active_tab",
      "label": "Set default active tab",
      "default": "product-tab-1",
      "options": [
        {
          "value": "product-tab-1",
          "label": "Product Collection One"
        },
        {
          "value": "product-tab-2",
          "label": "Product Collection Two"
        }
      ]
    },
    {
      "type": "header",
      "content": "Collections"
    },
    {
      "type": "collection",
      "id": "product_collection_one",
      "label": "Product Collection One"
    },
    {
      "type": "collection",
      "id": "product_collection_two",
      "label": "Product Collection Two"
    },
    {
      "type": "checkbox",
      "id": "view_all",
      "label": "Enable View All Button",
      "default": false
    },
    {
      "type": "select",
      "id": "view_all_style",
      "label": "View View All Style",
      "options": [
        {
          "value": "outline",
          "label": "Outline"
        },
        {
          "value": "solid",
          "label": "Solid"
        },
        {
          "value": "link",
          "label": "Link"
        }
      ],
      "default": "solid"
    },
    {
      "type": "range",
      "label": "Number of Columns (Desktop)",
      "id": "columns_desktop",
      "min": 3,
      "max": 6,
      "step": 1,
      "default": 4
    },
    {
      "type": "header",
      "content": "Carousel Settings"
    },

    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Make Products Full Width",
      "default": false
    },
    {
      "type": "select",
      "id": "autoplay",
      "label": "Autoplay",
      "options": [
        {
          "value": "yes",
          "label": "Yes"
        },
        {
          "value": "no",
          "label": "No"
        }
      ],
      "default": "yes"
    },
    {
      "type": "range",
      "label": "Autoplay Speed (seconds)",
      "info": "Autoplay must be enabled",
      "id": "autoplay_speed",
      "unit": "sec",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3
    },
    {
      "type": "select",
      "id": "pause_on_hover",
      "label": "Pause on Hover",
      "options": [
        {
          "value": "yes",
          "label": "Yes"
        },
        {
          "value": "no",
          "label": "No"
        }
      ],
      "default": "yes"
    },
    {
      "type": "header",
      "content": "Grid Settings"
    },
    {
      "type": "checkbox",
      "id": "grid_layout",
      "label": "Change to grid layout",
      "info": "this setting will disable the carousel",
      "default": false
    },
    {
      "type": "range",
      "label": "Products To Show",
      "id": "grid_products_to_show",
      "min": 3,
      "max": 16,
      "step": 1,
      "default": 5
    },
    {
      "type": "header",
      "content": "Product Image Options"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "Show secondary image on hover"
    }
  ]
}
{% endschema %}
